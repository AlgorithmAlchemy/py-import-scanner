"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
"""
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, str(Path(__file__).parent / 'src'))

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üöÄ Python Import Parser (—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ v2.4.0)")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π#
        print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª–µ–π...")
        
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        try:
            from core.architecture_analyzer import ArchitectureAnalyzer
            print("‚úÖ ArchitectureAnalyzer - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except ImportError as e:
            print(f"‚ö†Ô∏è ArchitectureAnalyzer - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        try:
            from core.dependency_analyzer import DependencyAnalyzer
            print("‚úÖ DependencyAnalyzer - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except ImportError as e:
            print(f"‚ö†Ô∏è DependencyAnalyzer - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        try:
            from core.complexity_analyzer import ComplexityAnalyzer
            print("‚úÖ ComplexityAnalyzer - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except ImportError as e:
            print(f"‚ö†Ô∏è ComplexityAnalyzer - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        try:
            from core.code_quality_analyzer import CodeQualityAnalyzer
            print("‚úÖ CodeQualityAnalyzer - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except ImportError as e:
            print(f"‚ö†Ô∏è CodeQualityAnalyzer - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        try:
            from PySide6.QtWidgets import QApplication
            from PySide6.QtCore import QTranslator, QLocale
            print("‚úÖ PySide6 GUI - –¥–æ—Å—Ç—É–ø–µ–Ω")
            
            # –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å GUI
            try:
                from core.scan_service import ScanService
                from core.logging_config import get_logger
                from gui.main_window import MainWindow
                
                print("üé® –ó–∞–ø—É—Å–∫ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                app = QApplication(sys.argv)
                app.setApplicationName("Python Import Parser")
                app.setApplicationVersion("2.4.0")
                app.setOrganizationName("AlgorithmAlchemy")
                
                # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                scan_service = ScanService()
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
                window = MainWindow(scan_service)
                window.show()
                
                print("‚úÖ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                
                # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
                return app.exec()
                
            except ImportError as e:
                print(f"‚ö†Ô∏è ScanService –∏–ª–∏ GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")
                print("üí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ psutil: pip install psutil")
                
        except ImportError as e:
            print(f"‚ö†Ô∏è PySide6 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            print("üí° –î–ª—è GUI —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PySide6: pip install PySide6")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        print("\nüîß –î–û–°–¢–£–ü–ù–´–ï –§–£–ù–ö–¶–ò–ò:")
        print("-" * 30)
        
        # –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        try:
            from src.core.project_analyzer_core import IntegratedProjectAnalyzer
            from src.core.examples_core import CoreExamples
            print("üöÄ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä - –¥–æ—Å—Ç—É–ø–µ–Ω")
            print("   –ö–æ–º–∞–Ω–¥–∞: python -m src.core.examples_core <—Ç–∏–ø> <–ø—É—Ç—å>")
            print("   –¢–∏–ø—ã: dependency, complexity, quality, architecture, comprehensive")
        except ImportError as e:
            print(f"üöÄ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        # –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
        try:
            analyzer = ArchitectureAnalyzer()
            print("üèóÔ∏è –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except:
            print("üèóÔ∏è –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        try:
            analyzer = DependencyAnalyzer()
            print("üì¶ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except:
            print("üì¶ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        try:
            analyzer = ComplexityAnalyzer()
            print("üìä –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except:
            print("üìä –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞
        try:
            analyzer = CodeQualityAnalyzer()
            print("‚ú® –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except:
            print("‚ú® –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        print("\nüìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø:")
        print("-" * 20)
        print("üìÑ DEPENDENCY_ANALYSIS_REPORT.md - –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        print("üèóÔ∏è ARCHITECTURE_ANALYSIS_REPORT.md - –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã")
        print("üìä QUALITY_ANALYSIS_REPORT.md - –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞")
        print("üéØ FINAL_COMPLETION_REPORT.md - –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç")
        
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        return 0
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return 1


if __name__ == "__main__":
    try:
        exit_code = main()
        sys.exit(exit_code)
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
